{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Sample template with sensitive information for testing",
  "Parameters": {
    "DBPassword": {
      "Type": "String",
      "NoEcho": true,
      "Default": "SANITIZED-GENERIC_PASSWORD-VALUE"
    },
    "APIKey": {
      "Type": "String",
      "Default": "SANITIZED-PARAMETER-VALUE"
    },
    "InstanceType": {
      "Type": "String",
      "Default": "t3.micro",
      "Description": "Instance type for the application server"
    },
    "SecretKeyParam": {
      "Type": "String",
      "Default": "SANITIZED-AWS_ACCESS_KEY_ID-VALUE"
    }
  },
  "Resources": {
    "MyDB": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": "mysql",
        "DBInstanceClass": "db.t3.micro",
        "MasterUsername": "{{resolve:secretsmanager:rds_master_password:SecretString:MasterUsername}}",
        "MasterUserPassword": {
          "Ref": "DBPassword"
        },
        "AllocatedStorage": 20,
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Production"
          }
        ]
      }
    },
    "AppInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "ImageId": "ami-0c55b159cbfafe1f0",
        "KeyName": "my-key-pair",
        "UserData": {
          "Fn::Base64": "{{resolve:secretsmanager:generic_secret:SecretString:UserData}}"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "app-server"
          }
        ]
      }
    },
    "ApiFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Role": "arn:aws:iam::123456789012:role/lambda-role",
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n  const apiKey = 'sk_test_51MzrT7Lv7GN4FLSACmBOQ5aeZ96X2DzjYwnSfsn';\n  // Rest of the function\n  return { statusCode: 200, body: 'Success' };\n};"
        },
        "Runtime": "nodejs14.x",
        "Environment": {
          "Variables": {
            "SECRET_KEY": {
              "Ref": "SecretKeyParam"
            },
            "API_URL": "https://api.example.com"
          }
        }
      }
    }
  },
  "Outputs": {
    "DBEndpoint": {
      "Description": "Endpoint of the database",
      "Value": {
        "Fn::GetAtt": [
          "MyDB",
          "Endpoint.Address"
        ]
      }
    }
  }
}